<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="warn">
  <property name="logback.logDir" value="logs"/>

  <!--输出到控制台 ConsoleAppender-->
  <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
    <!--展示格式 layout-->
    <encoder>
      <charset>UTF-8</charset>
      <pattern>%d [%t] %-5level %logger{36}.%M\(%file:%line\)%X{timestamp} %X{userId} %X{requestIp} %X{event}  - %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="info" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!--如果只是想要 Info 级别的日志，只是过滤 info 还是会输出 Error 日志，因为 Error 的级别高，
        所以我们使用下面的策略，可以避免输出 Error 的日志-->
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <!--过滤 Error-->
      <level>INFO</level>
      <!--匹配就允许-->
      <onMatch>ACCEPT</onMatch>
      <!--没有匹配到就禁止-->
      <onMismatch>DENY</onMismatch>
    </filter>
    <File>${logback.logDir}/usr-op.log</File>
    <!--滚动策略，按照时间滚动 TimeBasedRollingPolicy-->
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
      <FileNamePattern>${logback.logDir}/info.%d{yyyy-MM-dd}.%i.log.gz</FileNamePattern>
      <!-- 单个日志文件最多 100MB -->
      <maxFileSize>100MB</maxFileSize>
      <!--只保留最近30天的日志-->
      <maxHistory>15</maxHistory>
      <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
      <!--<totalSizeCap>1GB</totalSizeCap>-->
    </rollingPolicy>
    <!--日志输出编码格式化-->
    <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
      <providers>
        <timestamp>
          <timeZone>UTC</timeZone>
        </timestamp>
        <pattern>
          <pattern>
            {
            "time":"%X{time}",
            "user":"%X{user}",
            "seat":"%X{seat}",
            "sw":"%X{sw}",
            "msg": "%msg"
            }
          </pattern>
        </pattern>
      </providers>
    </encoder>
  </appender>

  <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
    <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
    <discardingThreshold>0</discardingThreshold>
    <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
    <queueSize>256</queueSize>
    <!-- 添加附加的appender,最多只能添加一个 -->
    <appender-ref ref ="info"/>
  </appender>

  <logger name="usr-op" level="info" additivity="false">
    <appender-ref ref="ASYNC"/>
  </logger>

  <root level="info">
    <appender-ref ref="console"/>
  </root>
</Configuration>